# Shiny LLM Tools {#sec-shiny-tools .unnumbered}

```{r}
#| eval: true 
#| echo: false 
#| include: false
source("_common.R")
library(shinypak)
```

Since I began writing this book[^book-birth], the number of AI tools for building Shiny apps has grown significantly. The chapters in this section introduce a few popular tools I've personally used to develop applications. For a comprehensive review of LLMs R packages, please checkout [Large Language Model tools for R](https://luisdva.github.io/llmsr-book/) online resource by [Luis D. Verde Arregoitia](https://luisdva.github.io). For the most up-to-date information on LLMs and R, I recommend [Simon Couch's blog](https://www.simonpcouch.com/blog/) and [Posit's AI blog](https://blogs.rstudio.com/ai/).

Given the rapidly evolving landscape and nature of these tools, I expect these chapters to change frequently. Please open a GitHub issue if there is anything outdated, incorrect, or missing.

[^book-birth]: I put the first 'complete' edition online in late 2023. 



## Shiny Assistant

The [Shiny Assistant](https://gallery.shinyapps.io/assistant/) is a browser-based LLM chat tool you can use to help build a Shiny app. The UI gives you the ability to submit prompts (questions or instructions), view the code, and launch the application. @sec-shiny-assist covers: 

- @sec-shiny-assist-ui    
- @sec-shiny-assist-p1  
- @sec-shiny-assist-p2  
- @sec-shiny-assist-p3  
- @sec-shiny-assist-p4  
- @sec-shiny-assist-p5  
- @sec-shiny-assist-p6
- @sec-shiny-assist-finishing-touches

## ellmer

The [`ellmer` package](https://ellmer.tidyverse.org/) provides easy access to many LLMs in the R environment (Positron or RStudio).

- @sec-ellmer-install
    - @sec-ellmer-chat    
    - @sec-ellmer-prompts       
- @sec-ellmer-shinydb   
    - @sec-ellmer-sys-prompt        
    - @sec-ellmer-update    
    - @sec-ellmer-refactor      
    - @sec-ellmer-overhaul    
- @sec-ellmer-finishing-touches   


## chores 

[`chores`](https://simonpcouch.github.io/chores/) was designed to,

"*help you complete repetitive, hard-to-automate tasks quickly.*"

The first portion of this chapter covers the updates to the movie review application: 

- @sec-chores-navbar-app    
    - @sec-chores-navbar-modules      
        - @sec-chores-compare-module    
        - @sec-chores-counts-module   
        - @sec-chores-dist-module   
        - @sec-chores-awards-module   
    - @sec-chores-navbar-utils    
        - @sec-chores-utils-name-case    
        - @sec-chores-utils-dist-var-summary    
        - @sec-chores-utils-create-movie-awards   

I also cover how to write extension packages with custom helper (prompts) that can be used with the addin. 

- @sec-shiny-chores-setup     
    - @sec-shiny-chores-addin     
- @sec-chores-helper-addin      
- @sec-chores-custom-helpers  
    - @sec-chores-ext-pkg


## gander 

The `gander` package...


> "*Think of AI tools as a friend who is a know-it-all, over-confident, presumptuous, and lacks self-awareness. Despite these imperfections, they remain your friend.*"