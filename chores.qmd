# chores {#sec-shiny-chores}

```{r}
#| eval: true 
#| echo: false 
#| include: false
source("_common.R")
```

```{r}
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "r", 
  look = "default", hsize = "1.15", size = "1.10",
  header = "WARNING",
  fold = FALSE,
  contents = "
This chapter is being developed. Thank you for your patience. 
  "
)
```

```{r}
#| label: co_box_tldr
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "b", 
  look = "default", hsize = "1.10", size = "1.05",
  header = "TLDR &emsp; ![](images/chores.png){width='8%'}",
  fold = TRUE,
  contents = "
  
  "
)
```

<!-- https://simonpcouch.github.io/chores/ -->

The [`chores` package](https://simonpcouch.github.io/chores/) was developed by Simon Couch (who is also the author of the [`ensure`](https://simonpcouch.github.io/ensure/) and [`gander`](https://simonpcouch.github.io/gander/) packages) to "*help you complete repetitive, hard-to-automate tasks quickly*". We previously covered the [`ellmer` package](https://ellmer.tidyverse.org/index.html) (see @sec-shiny-ellmer), which is required to configure your LLM of choice.

```{r}
#| eval: false 
#| code-fold: false
install.packages('ellmer')
# or the dev version
pak::pak('tidyverse/ellmer')
```

```{r}
#| eval: false 
#| code-fold: false
install.packages('chores')
# or the dev version
pak::pak("simonpcouch/chores")
```

## Setting up `chores` {#sec-shiny-chores-setup}

```{r}
#| eval: false
#| code-fold: false
usethis::edit_r_profile()
```

```{r}
#| eval: false
#| code-fold: false
options(.chores_chat = ellmer::chat_openai(model = "gpt-4o"))
```

```{r}
#| eval: false
#| code-fold: false

```

```{r}
#| eval: false
#| code-fold: false

```


### Using the add-in {#sec-shiny-chores-addin}