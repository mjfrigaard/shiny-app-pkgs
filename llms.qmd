# Shiny & LLMs {#sec-shiny-llms .unnumbered}

```{r}
#| eval: true 
#| echo: false 
#| include: false
source("_common.R")
library(shinypak)
```

Since I began writing this book[^book-birth], the number of AI tools for building Shiny apps has grown significantly. The chapters in this section introduce a few popular tools I've personally used to develop applications. For a comprehensive review of LLMs R packages, please checkout the excellent [Large Language Model tools for R](https://luisdva.github.io/llmsr-book/) book by [Luis D. Verde Arregoitia](https://luisdva.github.io). 

Given the rapidly evolving landscape and nature of these tools, I expect these chapters to change frequently. Please open a GitHub issue if there is anything outdated, incorrect, or missing.

[^book-birth]: I put the first 'complete' edition online in late 2023. 

:::: {.callout-tip collapse="true" title="Review Chapters 19 - 22"}

::: {.callout-note collapse='true'}

#### shinyapps.io (Chapter 19)

- @sec-shinyappsio-publish    
- @sec-shinyappsio-deploy-log   
- @sec-shinyappsio-rsconnect-dir    
- @sec-shinyappsio-app-logs   

:::: {.callout-tip collapse='true' appearance='default'}

#### Chapter 19 Applications

::: {style='font-size: 0.95em; color: #282b2d;'}

The applications in Chapter 19 (shinyapps.io) can be accessed with the `launch()` or `get()` functions from the [`shinypak` R package](https://mjfrigaard.github.io/shinypak/):

```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| eval: false
# install.packages('pak')
pak::pak('mjfrigaard/shinypak')
library(shinypak)
```

Chapter 19 applications:
  
```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| collapse: true
list_apps(regex = '^19')
```

::: 

::::

:::

::: {.callout-note collapse='true'}

#### Docker (Chapter 20)

[Docker](docker.qmd) dives into:

- @sec-docker-what-is-docker  
- @sec-docker-install     
- @sec-docker-dockerfile    
- @sec-docker-build-image   
- @sec-docker-run-container   
- @sec-docker-golem   
- @sec-docker-app-packages    

:::: {.callout-tip collapse='true' appearance='default'}

#### Chapter 20 Applications

::: {style='font-size: 0.95em; color: #282b2d;'}

The applications in Chapter 20 (Docker) can be accessed with the `launch()` or `get()` functions from the [`shinypak` R package](https://mjfrigaard.github.io/shinypak/):


```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| eval: false
# install.packages('pak')
pak::pak('mjfrigaard/shinypak')
library(shinypak)
```

Chapter 20 applications:
  
```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| collapse: true
list_apps(regex = '^20')
```

::: 

::::

:::

::: {.callout-note collapse='true'}

#### GitHub Actions (Chapter 21)

The [GitHub Actions](gha.qmd) chapter includes three examples of CI/CD workflows:

- @sec-gha-style    
- @sec-gha-shiny    
- @sec-gha-shiny-docker   

:::: {.callout-tip collapse='true' appearance='default'}

#### Chapter 21 Applications

::: {style='font-size: 0.95em; color: #282b2d;'}

The applications in Chapter 21 (GitHub Actions) can be accessed with the `launch()` or `get()` functions from the [`shinypak` R package](https://mjfrigaard.github.io/shinypak/):


```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| eval: false
# install.packages('pak')
pak::pak('mjfrigaard/shinypak')
library(shinypak)
```

Chapter 21 applications:
  
```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| collapse: true
list_apps(regex = '^21')
```

::: 

::::

:::

::: {.callout-note collapse='true'}

#### pkgdown (Chapter 22)

[pkgdown](pkgdown.qmd) describes:

- @sec-pkgdown-setup    
- @sec-pkgdown-site-contents            
- @sec-pkgdown-layouts      
    - @sec-pkgdown-reference      
- @sec-pkgdown-workflow       
- @sec-pkgdown-github     

:::: {.callout-tip collapse='true' appearance='default'}

#### Chapter 22 Applications

::: {style='font-size: 0.95em; color: #282b2d;'}

The applications in Chapter 22 (`pkgdown`) can be accessed with the `launch()` or `get()` functions from the [`shinypak` R package](https://mjfrigaard.github.io/shinypak/):


```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| eval: false
# install.packages('pak')
pak::pak('mjfrigaard/shinypak')
library(shinypak)
```

Chapter 22 applications:
  
```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| collapse: true
list_apps(regex = '^22')
```

::: 

::::

:::


::::


## Shiny Assistant

The [Shiny Assistant](https://gallery.shinyapps.io/assistant/) is a browser-based LLM chat tool you can use to help build a Shiny app. The UI gives you the ability to submit prompts (questions or instructions), view the code, and launch the application. @sec-shiny-assist covers: 

- @sec-shiny-assist-ui    
- @sec-shiny-assist-p1  
- @sec-shiny-assist-p2  
- @sec-shiny-assist-p3  
- @sec-shiny-assist-p4  
- @sec-shiny-assist-p5  
- @sec-shiny-assist-p6
- @sec-shiny-assist-finishing-touches

## ellmer

The [`ellmer` package](https://ellmer.tidyverse.org/) provides easy access to many LLMs in the R environment (Positron or RStudio).

- @sec-ellmer-install
    - @sec-ellmer-chat    
    - @sec-ellmer-prompts       
- @sec-ellmer-shinydb   
    - @sec-ellmer-sys-prompt        
    - @sec-ellmer-update    
    - @sec-ellmer-refactor      
    - @sec-ellmer-overhaul    
- @sec-ellmer-finishing-touches   


## shinychat 

`shinychat` is...

## chores 

The `chores` package...


> "*Think of AI tools as a friend who is a know-it-all, over-confident, presumptuous, and lacks self-awareness. Despite these imperfections, they remain your friend.*"