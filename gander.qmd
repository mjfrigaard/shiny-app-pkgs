# gander {#sec-shiny-gander}

```{r}
#| eval: true 
#| echo: false 
#| include: false
source("_common.R")
```

```{r}
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "r", 
  look = "default", hsize = "1.15", size = "1.10",
  header = "WARNING",
  fold = FALSE,
  contents = "
This chapter is being developed. Thank you for your patience. 
  "
)
```

The final LLM package we'll cover for Shiny app-package development is [`gander`](https://simonpcouch.github.io/gander/index.html), which extends the use of `ellmer` models to, 

"*talk[ing] to the objects in your R environment.*"[^gander]

[^gander]: `gander` is the third LLM R package we've covered by developer [Simon Couch](https://github.com/simonpcouch) (we also covered `ensure` in @sec-test-tools-help and `chores` @sec-shiny-chores). If you're interested in staying up on LLMs and their use in R package development, I highly recommend regularly checking [his blog](https://www.simonpcouch.com/blog/). 


## Configuration 

First we'll install the [`ellmer`](https://ellmer.tidyverse.org/) and [`gander`](https://simonpcouch.github.io/gander/index.html) packages:

```{r}
#| eval: false 
#| code-fold: false
install.packages('ellmer')
# or the dev version
pak::pak('tidyverse/ellmer')
```

```{r}
#| eval: false 
#| code-fold: false
install.packages('gander')
# or the dev version
pak::pak("simonpcouch/gander")
```

Configuring the model can be done with a personal access token (PAT) your `.Renviron` file:



<!-- https://posit-dev.github.io/shinychat/ -->

<!-- https://simonpcouch.github.io/gander/ -->



