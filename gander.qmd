# gander {#sec-shiny-gander}

```{r}
#| eval: true 
#| echo: false 
#| include: false
source("_common.R")
```

```{r}
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "r", 
  look = "default", hsize = "1.15", size = "1.10",
  header = "WARNING",
  fold = FALSE,
  contents = "
This chapter is being developed. Thank you for your patience. 
  "
)
```


```{r}
#| eval: false 
#| code-fold: false
install.packages('ellmer')
# or the dev version
pak::pak('tidyverse/ellmer')
```

```{r}
#| eval: false 
#| code-fold: false
install.packages('gander')
# or the dev version
pak::pak("simonpcouch/gander")
```


We're going to be using the Shiny application from the [2023 Shiny in production `posit::conf()` workshop](https://posit-conf-2023.github.io/shiny-r-prod/).[^posit-conf-materials] The application demonstrated in this workshop--`brickapp`--is an app-package with various versions in the Git branches (similar to the `sap` package). We're going to be using a slightly modified version of the application stored in the [`profiledemo` branch](https://github.com/posit-conf-2023/shiny-r-prod-lego/tree/profiledemo).[^profiledemo] `brickapp` was built using the `golem` framework (we'll cover `golem` in @sec-golem), and a folder tree of it's structure is below:

[^posit-conf-materials]: The accompanying [GitHub repo for the application](https://github.com/posit-conf-2023/shiny-r-prod-lego). 

[^profiledemo]: The prediction modules/functionality has been removed from the version we're using. If you'd like to see the full app, check the [Github Repo](https://github.com/posit-conf-2023/shiny-r-prod-lego/). 

```{bash}
#| eval: false 
#| code-fold: true 
#| code-summary: 'show/hide inst/lego directory'
inst/lego
├── CODE_OF_CONDUCT.md
├── DESCRIPTION
├── LICENSE
├── LICENSE.md
├── NAMESPACE
├── NEWS.md
├── R
│   ├── _disable_autoload.R
│   ├── app_config.R
│   ├── app_server.R
│   ├── app_ui.R
│   ├── data.R
│   ├── fct_data_processing.R
│   ├── fct_visual.R
│   ├── mod_numparts_picker.R
│   ├── mod_numparts_picker_fct_helpers.R
│   ├── mod_part_table.R
│   ├── mod_part_table_fct_helpers.R
│   ├── mod_set_picker.R
│   ├── mod_set_picker_fct_helpers.R
│   ├── mod_set_viewer.R
│   ├── mod_theme_picker.R
│   ├── mod_value_widgets.R
│   ├── mod_value_widgets_fct_calc.R
│   ├── mod_year_picker.R
│   └── run_app.R
├── README.Rmd
├── README.md
├── app.R
├── brickapp-profiledemo.Rproj
├── data
│   ├── colors.rda
│   ├── elements.rda
│   ├── inventories.rda
│   ├── inventory_minifigs.rda
│   ├── inventory_parts.rda
│   ├── inventory_sets.rda
│   ├── minifigs.rda
│   ├── part_categories.rda
│   ├── part_relationships.rda
│   ├── parts.rda
│   ├── sets.rda
│   └── themes.rda
├── data-raw
│   ├── colors.R
│   ├── elements.R
│   ├── inventories.R
│   ├── inventory_minifigs.R
│   ├── inventory_parts.R
│   ├── inventory_sets.R
│   ├── lego_sets.R
│   ├── minifigs.R
│   ├── part_categories.R
│   ├── part_meta.R
│   ├── part_relationships.R
│   ├── parts.R
│   ├── sets.R
│   └── themes.R
├── dev
│   ├── 01_start.R
│   ├── 02_dev.R
│   ├── 03_deploy.R
│   ├── config_attachment.yaml
│   └── run_dev.R
├── inst
│   ├── app
│   │   └── www
│   │       └── favicon.ico
│   └── golem-config.yml
└── man
    ├── colors.Rd
    ├── elements.Rd
    ├── inventories.Rd
    ├── inventory_minifigs.Rd
    ├── inventory_parts.Rd
    ├── inventory_sets.Rd
    ├── minifigs.Rd
    ├── part_categories.Rd
    ├── part_relationships.Rd
    ├── parts.Rd
    ├── run_app.Rd
    ├── sets.Rd
    └── themes.Rd

9 directories, 75 files
```

I've chosen this example to illustrate the `gander` package because 

<!-- https://posit-dev.github.io/shinychat/ -->

<!-- https://simonpcouch.github.io/gander/ -->



