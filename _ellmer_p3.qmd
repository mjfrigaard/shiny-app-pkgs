

```{r}
#| eval: false 
#| code-fold: true 
#| code-summary: 'show/hide prompt 3'
chat$chat("
Restructure the application to use the following modules and functions: 

* `db_app_ui()`: main app UI function

* `db_app_server()`: main server function 

* `mod_select_input_ui()`/`mod_slider_input_server()`: select inputs shiny 
  module 

* `mod_slider_input_ui()`/`mod_slider_input_server()`: slider inputs shiny 
  module 

* `mod_text_input_ui()`/`mod_text_input_server()`: text input shiny module 

* `mod_points_plotly_ui()`/`mod_points_plotly_server()`: scatter-plot 
  (plotly) shiny module (UI)

* `mod_table_ui()`/`mod_table_server()`: reactable table shiny module (UI) 
  that displays the data in the scatter-plot.

* `db_con()`: database connection to `movies.db` (using `DBI::dbConnect()`,
  `RSQLite::SQLite()` and `system.file()`)

* `join_movies_tbls()`: joins the `omdb` and `tomatoes` tables from an SQLite
  database connection, filters out movies with fewer than 5 reviews, and 
  selects relevant columns.

* `scatter_plotly()`: generates an interactive Plotly scatter plot using a 
reactive dataset. The user specifies the x-axis, y-axis, and a categorical 
variable for coloring the points.

An abstract syntax tree for the functions is below for reference:

\`\`\`
█─launch_db_app 
├─█─db_app_ui 
│ ├─█─mod_select_input_ui 
│ ├─█─mod_slider_input_ui 
│ ├─█─mod_text_input_ui 
│ ├─█─mod_points_plotly_ui 
│ └─█─mod_table_ui 
└─█─db_app_server 
  ├─█─db_con 
  │ └─█─join_movies_tbls 
  ├─█─mod_slider_input_server 
  ├─█─mod_select_input_server 
  ├─█─mod_text_input_server 
  ├─█─mod_table_server 
  └─█─mod_points_plotly_server 
    └─█─scatter_plotly 
\`\`\`

Include roxygen2 documentation for each function.
")
```